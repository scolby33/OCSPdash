# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
# add additional Python versions here
envlist =
    # always keep coverage-clean first
    coverage-clean
    # code linters/stylers
    manifest
    flake8
    mypy
    #vulture
    # documentation linters/checkers
    doc8
    rst-lint
    readme
    docs
    # the actual tests
    py36
    # always keep coverage-report last
    coverage-report

[testenv]
commands = coverage run --parallel -m pytest tests {posargs}
passenv = OCSPDASH_TEST_CONNECTOR OCSPDASH_TEST_CONNECTION TRAVIS CI CI_*
deps =
    {env:OCSPDASH_TEST_CONNECTOR:}
    coverage
    pytest
whitelist_externals =
    /bin/cat
    /bin/cp
    /bin/mkdir

[testenv:coverage-clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:manifest]
deps = check-manifest
commands = check-manifest

[testenv:flake8]
basepython = python3
skip_install = true
deps =
    flake8
    flake8-colors
    flake8-docstrings
    flake8-import-order
    pep8-naming
commands =
    flake8 src/ocspdash tests/ setup.py

[testenv:mypy]
commands = mypy src/ocspdash/ --ignore-missing-import --no-warn-no-return
skip_install = true
deps =
    mypy

[testenv:vulture]
commands = vulture src/ocspdash tests/
skip_install = true
deps =
    vulture

[testenv:doc8]
basepython = python3
skip_install = true
deps =
    sphinx
    doc8
commands =
    doc8 docs/source/

[testenv:rst-lint]
commands = rst-lint README.rst
skip_install = true
deps =
    restructuredtext_lint
    pygments

[testenv:readme]
deps =
    restructuredtext-lint
    pygments
skip_install = true
commands = rst-lint README.rst

[testenv:docs]
changedir = docs
deps =
    sphinx
    sphinx_rtd_theme
commands =
    mkdir -p {envtmpdir}
    cp -r source {envtmpdir}/source
    sphinx-build -W -b html -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/html
    sphinx-build -W -b coverage -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/coverage
    cat {envtmpdir}/build/coverage/c.txt
    cat {envtmpdir}/build/coverage/python.txt

[testenv:coverage-report]
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage report
